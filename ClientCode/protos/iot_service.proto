syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.grpc.examples.iotservice";
option java_outer_classname = "IoTServiceProto";
option objc_class_prefix = "TEMP";

package iot_service;

// The temperature service definition.
service IoTService {
  // Responds with a temperature measurement
  rpc SayTemperature (TemperatureRequest) returns (TemperatureReply) {}
  
  // Send a command to the led
  rpc BlinkLed (LedRequest) returns (LedReply) {}

  // Responds with the current reading of a given light sensor
  rpc SayLightLevel (LightLevelRequest) returns (LightLevelReply) {}
  
  // User uses this RPC to send his user and password to try login and if sucessful, generate his hash token.
  rpc Authenticate (TryLogin) returns (codigoHash) {}
}

// The request message containing the user's name.
message TemperatureRequest {
  string sensorName = 1;
  string userTry = 2;
  string chaveHash = 3;
}

// The response message containing the greetings
message TemperatureReply {
  string temperature = 1;
}

message LedRequest {
  uint32 state = 1;
  string ledname = 2;
  string userTry = 3;
  string chaveHash = 4;
}

message LedReply{
  map<string, uint32> ledstate = 1;
}

message LightLevelRequest {
  string sensorName = 1;
  string userTry = 2;
  string chaveHash = 3;
}

message LightLevelReply {
  string lightLevel = 1;
}

message TryLogin {
 string userTry = 1;
 string passTry = 2;
}

message codigoHash{
 string chaveHash = 1;
}
